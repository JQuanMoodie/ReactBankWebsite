{"version":3,"sources":["components/AccountBalance.js","components/Credits.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","_jsxs","children","this","props","accountBalance","Credits","_jsx","Link","to","Home","src","alt","CreditList","creditList","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","fetch","Debits","debitsView","debits","map","debit","date","slice","amount","description","id","addDebit","App","logInInfo","newUser","currentUser","debitList","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","credits","DebitsComponent","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b75d7c82.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass CreditList extends Component {\n  render() {\n    return(\n      <div>\n        Credits : {this.props.creditList}\n      </div>\n    )\n  }\n}\n\nconst Credits = (props) => {\n  return (\n    <div>\n      <h1>Credits</h1>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport CreditList from './Credits';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/> \n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n        <CreditList creditList={this.props.creditList}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nfetch('https://johnnylaicode.github.io/api/debits.json')\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/ReactBankWebsite\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}