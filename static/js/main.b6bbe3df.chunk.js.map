{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","_jsxs","children","this","props","accountBalance","Home","_jsx","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","creditsView","credits","map","credit","date","slice","amount","description","id","addCredit","step","Debits","debitsView","debits","debit","addDebit","App","logInInfo","newUser","currentUser","temp","parseFloat","toFixed","newDebit","Date","now","toISOString","prevState","debitList","reset","newCredit","creditList","creditComponentDidMount","debitComponentDidMount","response","axios","get","console","log","data","error","status","updateAccountBalance","i","length","roundedNum","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"oOAOA,MAAMA,UAAuBC,YAG3BC,SACE,OACEC,eAAA,OAAAC,SAAA,CAAK,YACOC,KAAKC,MAAMC,iBAG3B,EAGaP,QCVf,MAAMQ,UAAaP,YACjBC,SACE,OACEC,eAAA,OAAAC,SAAA,CACEK,cAAA,OAAKC,IAAI,gCAAgCC,IAAI,SAE7CF,cAAA,MAAAL,SAAI,kBAEJK,cAACG,IAAI,CAACC,GAAG,eAAcT,SAAC,iBACxBK,cAAA,SACAA,cAACG,IAAI,CAACC,GAAG,SAAQT,SAAC,UAClBK,cAAA,SACAA,cAACG,IAAI,CAACC,GAAG,WAAUT,SAAC,YACpBK,cAAA,SACAA,cAACG,IAAI,CAACC,GAAG,UAAST,SAAC,WACnBK,cAAA,SAAKA,cAAA,SACLA,cAACT,EAAc,CAACO,eAAgBF,KAAKC,MAAMC,mBAGjD,EAGaC,QCtBf,MAAMM,UAAoBb,YACxBC,SACE,OACEC,eAAA,OAAAC,SAAA,CACEK,cAAA,MAAAL,SAAI,iBAEJD,eAAA,OAAAC,SAAA,CAAK,aAAWC,KAAKC,MAAMS,YAC3BZ,eAAA,OAAAC,SAAA,CAAK,iBAAeC,KAAKC,MAAMU,eAC/BP,cAAA,SACAA,cAACG,IAAI,CAACC,GAAG,IAAGT,SAAC,qBAGnB,EAGaU,QCdf,MAAMG,UAAchB,YAClBiB,YAAaZ,GACXa,MAAMb,GAWR,KACAc,aAAgBC,IACd,MAAMC,EAAc,IAAIjB,KAAKkB,MAAMC,MACnCF,EAAYP,SAAWM,EAAEI,OAAOC,MAChCrB,KAAKsB,SAAS,CAACH,KAAMF,GAAa,EAGpC,KACAM,aAAgBP,IACdA,EAAEQ,iBACFxB,KAAKC,MAAMwB,UAAUzB,KAAKkB,MAAMC,MAChCnB,KAAKsB,SAAS,CAACI,UAAU,GAAM,EArB/B1B,KAAKkB,MAAQ,CACXC,KAAM,CAEJT,SAAUV,KAAKC,MAAMkB,KAAKT,SAC1BiB,SAAU,IAEZD,UAAU,EAEd,CAgBA7B,SAEE,OAAIG,KAAKkB,MAAMQ,SACLtB,cAACwB,IAAQ,CAACpB,GAAG,iBAKrBV,eAAA,OAAAC,SAAA,CACEK,cAAA,MAAAL,SAAI,UAEJD,eAAA,QAAM+B,SAAU7B,KAAKuB,aAAaxB,SAAA,CAChCD,eAAA,OAAAC,SAAA,CACEK,cAAA,SAAAL,SAAO,cACPK,cAAA,SAAO0B,KAAK,OAAOC,KAAK,WAAWC,aAAchC,KAAKC,MAAMkB,KAAKT,SAAUuB,SAAUjC,KAAKe,kBAE5FjB,eAAA,OAAAC,SAAA,CACEK,cAAA,SAAAL,SAAO,aACPK,cAAA,SAAO0B,KAAK,WAAWC,KAAK,gBAE9B3B,cAAA,UAAAL,SAAQ,cAEVK,cAAA,SACAA,cAACG,IAAI,CAACC,GAAG,IAAGT,SAAC,qBAGnB,EAGaa,QCxBAsB,MAjCEjC,GAWbH,eAAA,OAAAC,SAAA,CACEK,cAAA,MAAAL,SAAI,YAVUoC,MAChB,MAAM,QAAEC,GAAYnC,EACpB,OAAOmC,EAAQC,KAAKC,IAClB,IAAIC,EAAOD,EAAOC,KAAKC,MAAM,EAAE,IAC/B,OAAO1C,eAAA,MAAAC,SAAA,CAAqBuC,EAAOG,OAAO,IAAEH,EAAOI,YAAY,IAAEH,IAAjDD,EAAOK,GAAoD,GAC3E,EAOCR,GAEDrC,eAAA,QAAM+B,SAAU5B,EAAM2C,UAAU7C,SAAA,CAC9BK,cAAA,SAAO0B,KAAK,OAAOC,KAAK,gBACxB3B,cAAA,SAAO0B,KAAK,SAASC,KAAK,SAASc,KAAK,SACxCzC,cAAA,UAAQ0B,KAAK,SAAQ/B,SAAC,kBAExBK,cAAA,SAEAA,cAACG,IAAI,CAACC,GAAG,IAAGT,SAAC,mBAEbD,eAAA,MAAAC,SAAA,CAAI,YAAUE,EAAMC,qBCOX4C,MAjCC7C,GAaZH,eAAA,OAAAC,SAAA,CACEK,cAAA,MAAAL,SAAI,WAXSgD,MACf,MAAM,OAAEC,GAAW/C,EACnB,OAAO+C,EAAOX,KAAKY,IACjB,IAAIV,EAAOU,EAAMV,KAAKC,MAAM,EAAE,IAC9B,OAAO1C,eAAA,MAAAC,SAAA,CAAoBkD,EAAMR,OAAO,IAAEQ,EAAMP,YAAY,IAAEH,IAA9CU,EAAMN,GAAkD,GACxE,EAQCI,GAEDjD,eAAA,QAAM+B,SAAU5B,EAAMiD,SAASnD,SAAA,CAC7BK,cAAA,SAAO0B,KAAK,OAAOC,KAAK,gBACxB3B,cAAA,SAAO0B,KAAK,SAASC,KAAK,SAASc,KAAK,SACxCzC,cAAA,UAAQ0B,KAAK,SAAQ/B,SAAC,iBAExBK,cAAA,SAEAA,cAACG,IAAI,CAACC,GAAG,IAAGT,SAAC,mBAEbD,eAAA,MAAAC,SAAA,CAAI,YAAUE,EAAMC,qBClB1B,MAAMiD,UAAYvD,YAChBiB,cACEC,QAcF,KACAW,UAAa2B,IACX,MAAMC,EAAU,IAAIrD,KAAKkB,MAAMoC,aAC/BD,EAAQ3C,SAAW0C,EAAU1C,SAC7BV,KAAKsB,SAAS,CAACgC,YAAaD,GAAS,EAGvC,KACAH,SAAYlC,IACVA,EAAEQ,iBACF,MAAMkB,EAAc1B,EAAEI,OAAOsB,YAAYrB,MACzC,IAAIkC,EAAOC,WAAWxC,EAAEI,OAAOqB,OAAOpB,OACtC,MAAMoB,EAASe,WAAWD,EAAKE,QAAQ,IACvC,GAAIf,GAAeD,EAAQ,CACzB,MAAMiB,EAAW,CACff,GAAIgB,KAAKC,MACTlB,cACAD,SACAF,MAAM,IAAIoB,MAAOE,eAGnB7D,KAAKsB,UAAUwC,IAAS,CACtBC,UAAW,IAAID,EAAUC,UAAWL,GACpCxD,eAAgBsD,YAAYM,EAAU5D,eAAiBuC,GAAQgB,QAAQ,OAE3E,CAGAzC,EAAEI,OAAO4C,OAAO,EAGlB,KACApB,UAAa5B,IACXA,EAAEQ,iBACF,MAAMkB,EAAc1B,EAAEI,OAAOsB,YAAYrB,MACzC,IAAIkC,EAAOC,WAAWxC,EAAEI,OAAOqB,OAAOpB,OACtC,MAAMoB,EAASe,WAAWD,EAAKE,QAAQ,IAEvC,GAAIf,GAAeD,EAAQ,CACzB,MAAMwB,EAAY,CAChBtB,GAAIgB,KAAKC,MACTlB,cACAD,SACAF,MAAM,IAAIoB,MAAOE,eAEnB7D,KAAKsB,UAAUwC,IAAS,CACtBI,WAAY,IAAIJ,EAAUI,WAAYD,GACtC/D,eAAgBsD,YAAYM,EAAU5D,eAAiBuC,GAAQgB,QAAQ,OAG3E,CAGAzC,EAAEI,OAAO4C,OAAO,EAlEhBhE,KAAKkB,MAAQ,CACXhB,eAAgB,EAChBgE,WAAY,GACZH,UAAW,GACXT,YAAa,CACX5C,SAAU,WACVC,YAAa,aAGjBX,KAAKmE,0BACLnE,KAAKoE,wBACP,CA2DA,6BAAMD,GAIJ,IACE,IAAIE,QAAiBC,IAAMC,IAJb,oDAKdC,QAAQC,IAAIJ,GAEZrE,KAAKsB,SAAS,CAAC4C,WAAYG,EAASK,MACtC,CACA,MAAOC,GACDA,EAAMN,WAERG,QAAQC,IAAIE,EAAMN,SAASK,MAC3BF,QAAQC,IAAIE,EAAMN,SAASO,QAE/B,CACF,CACA,4BAAMR,GAIJ,IACE,IAAIC,QAAiBC,IAAMC,IAJb,mDAKdC,QAAQC,IAAIJ,GAEZrE,KAAKsB,SAAS,CAACyC,UAAWM,EAASK,MACrC,CACA,MAAOC,GACDA,EAAMN,WAERG,QAAQC,IAAIE,EAAMN,SAASK,MAC3BF,QAAQC,IAAIE,EAAMN,SAASO,QAE/B,CACA5E,KAAK6E,sBACP,CAGAA,uBACE,IAAItB,EAAO,EACX,IAAK,IAAIuB,EAAI,EAAGA,EAAI9E,KAAKkB,MAAMgD,WAAWa,OAAQD,IAEhDvB,GAAQvD,KAAKkB,MAAMgD,WAAWY,GAAGrC,OAEnC,IAAK,IAAIqC,EAAI,EAAGA,EAAI9E,KAAKkB,MAAM6C,UAAUgB,OAAQD,IAE/CvB,GAAQvD,KAAKkB,MAAM6C,UAAUe,GAAGrC,OAElC,IAAIuC,EAAaxB,WAAWD,EAAKE,QAAQ,IACzCzD,KAAKsB,SAAS,CAACpB,eAAgB8E,GACjC,CAGAnF,SAUE,OACEO,cAAC6E,IAAM,CAACC,SAAS,aAAYnF,SAC3BD,eAAA,OAAAC,SAAA,CACEK,cAAC+E,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIxF,OALNyF,IAAOlF,cAACD,EAAI,CAACD,eAAgBF,KAAKkB,MAAMhB,mBAMxDE,cAAC+E,IAAK,CAACC,OAAK,EAACC,KAAK,eAAexF,OAZV0F,IAC3BnF,cAACK,EAAW,CAACC,SAAUV,KAAKkB,MAAMoC,YAAY5C,SAAUC,YAAaX,KAAKkB,MAAMoC,YAAY3C,gBAYxFP,cAAC+E,IAAK,CAACC,OAAK,EAACC,KAAK,SAASxF,OAVV2F,IAAOpF,cAACQ,EAAK,CAACO,KAAMnB,KAAKkB,MAAMoC,YAAa7B,UAAWzB,KAAKyB,cAW7ErB,cAAC+E,IAAK,CAACC,OAAK,EAACC,KAAK,WAAWxF,OAVV4F,IAAOrF,cAAC8B,EAAO,CAACE,QAASpC,KAAKkB,MAAMgD,WAAYhE,eAAgBF,KAAKkB,MAAMhB,eAAgB0C,UAAW5C,KAAK4C,cAW9HxC,cAAC+E,IAAK,CAACC,OAAK,EAACC,KAAK,UAAUxF,OAVV6F,IAAOtF,cAAC0C,EAAM,CAACE,OAAQhD,KAAKkB,MAAM6C,UAAW7D,eAAgBF,KAAKkB,MAAMhB,eAAgBgD,SAAUlD,KAAKkD,iBAcjI,EAGaC,QC5JAwC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECEFS,IAASxG,OACPO,cAACkG,IAAMC,WAAU,CAAAxG,SACfK,cAAC+C,EAAG,MAENqD,SAASC,eAAe,SAO1Bd,G","file":"static/js/main.b6bbe3df.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  \n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/> \n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\n\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    });\n  }\n\n    return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" step=\"0.01\"/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n\n      <Link to=\"/\">Return to Home</Link>\n\n      <h2>Balance: {props.accountBalance}</h2>\n    </div>\n    \n    );\n  \n}\n\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" step=\"0.01\"/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n\n      <Link to=\"/\">Return to Home</Link>\n\n      <h2>Balance: {props.accountBalance}</h2>    \n    </div>\n  );\n}\n\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';  // Library used to send asynchronous HTTP requests to RESTful endpoints (APIs)\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.00,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'John Doe',\n        memberSince: '11/22/99',\n      },\n    };\n    this.creditComponentDidMount();\n    this.debitComponentDidMount();\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Add Debit Method\n  addDebit = (e) => {\n    e.preventDefault();\n    const description = e.target.description.value;\n    let temp = parseFloat(e.target.amount.value);\n    const amount = parseFloat(temp.toFixed(2));\n    if (description && amount) {\n      const newDebit = {\n        id: Date.now(),\n        description,\n        amount,\n        date: new Date().toISOString()\n      };\n      \n      this.setState((prevState) => ({\n        debitList: [...prevState.debitList, newDebit],\n        accountBalance: parseFloat((prevState.accountBalance - amount).toFixed(2)) // Update balance\n      }));\n    }\n\n    // Reset form\n    e.target.reset();\n  };\n\n  // Add Credit Method\n  addCredit = (e) => {\n    e.preventDefault();\n    const description = e.target.description.value;\n    let temp = parseFloat(e.target.amount.value);\n    const amount = parseFloat(temp.toFixed(2));\n\n    if (description && amount) {\n      const newCredit = {\n        id: Date.now(),  // Use current timestamp as a unique ID\n        description,\n        amount,\n        date: new Date().toISOString()\n      };\n      this.setState((prevState) => ({\n        creditList: [...prevState.creditList, newCredit],\n        accountBalance: parseFloat((prevState.accountBalance + amount).toFixed(2)) // Update balance\n      }));\n\n    }\n\n    // Reset form\n    e.target.reset();\n  };\n\n  // Make async API call to retrieve data from remote website\n  async creditComponentDidMount() {\n    let linkToAPI = 'https://johnnylaicode.github.io/api/credits.json';  // Link to remote website API endpoint for credits\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({creditList: response.data});  // Store received data in state's \"creditList\" object\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n  }\n  async debitComponentDidMount() {\n    let linkToAPI = 'https://johnnylaicode.github.io/api/debits.json';  // Link to remote website API endpoint for debit\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({debitList: response.data});  // Store received data in state's \"creditList\" object\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n    this.updateAccountBalance();\n  }\n\n  // Update Account Balance\n  updateAccountBalance(){\n    let temp = 0.0;\n    for (let i = 0; i < this.state.creditList.length; i++)\n    {\n      temp += this.state.creditList[i].amount;\n    }\n    for (let i = 0; i < this.state.debitList.length; i++)\n    {\n      temp -= this.state.debitList[i].amount;\n    }\n    let roundedNum = parseFloat(temp.toFixed(2));\n    this.setState({accountBalance: roundedNum});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit}/>) \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/ReactBank\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}